cache:
  paths:
    - ccache/


before_script:
 # Install ssh-agent if not already installed, it is required by Docker.
 - 'apt-get -qq update -y'
 - 'apt-get -qq install git build-essential openssh-client sudo -y'
 - 'apt-get -qq install libgsl0-dev libblas-dev sudo -y'
 # Run ssh-agent (inside the build environment)
 - eval $(ssh-agent -s)
 # Add the SSH key stored in SSH_PRIVATE_KEY variable to the agent store
 - ssh-add <(echo "$SSH_PRIVATE_KEY")
 # For Docker builds disable host key checking. Be aware that by adding that
 # you are suspectible to man-in-the-middle attacks.
 # WARNING: Use this only with the Docker executor, if you use it with shell
 # you will overwrite your user's SSH config.
 - mkdir -p ~/.ssh
 - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
 - git clone https://gitlab.com/VictorLamoine/ros_gitlab_ci.git
 - source ros_gitlab_ci/gitlab-ci.bash >/dev/null
 - apt-get install -y -qq libgtest-dev

# melodic
melodic:
  image: ros:melodic-robot
  stage: build
  script:
    - (cd /usr/src/gtest; cmake . && make && cp *.a /usr/lib/)
    - catkin build romea_core_path --cmake-args -DBUILD_TESTS=ON
    - cd build/romea_core_path
    - GTEST_COLOR=1 ctest --output-on-failure

# noetic
noetic_catkin_build:
  image: ros:noetic-robot
  stage: build
  script:
    - catkin build romea_core_path --cmake-args -DBUILD_TESTS=ON
    - cd build/romea_core_path
    - GTEST_COLOR=1 ctest --output-on-failure
